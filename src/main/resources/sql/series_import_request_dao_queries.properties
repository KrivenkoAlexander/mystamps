series_import_requests.create = \
INSERT \
  INTO series_import_requests \
     ( url \
     , status_id \
     , updated_at \
     , requested_at \
     , requested_by \
     ) \
SELECT :url \
     , st.id \
     , :updated_at \
     , :requested_at \
     , :requested_by \
  FROM series_import_request_statuses st \
 WHERE st.name = :status

series_import_requests.change_status = \
UPDATE series_import_requests r \
   SET status_id = \
     ( \
       SELECT id \
         FROM series_import_request_statuses \
        WHERE name = :new_status \
     ) \
     , updated_at = :date \
 WHERE r.id = :id \
   AND r.status_id = \
     ( \
       SELECT id \
         FROM series_import_request_statuses \
        WHERE name = :old_status \
     )

series_import_requests.find_by_id = \
SELECT r.url \
     , s.name AS status \
     , r.series_id \
  FROM series_import_requests r \
  JOIN series_import_request_statuses s \
    ON r.status_id = s.id \
 WHERE r.id = :id

series_import_requests.add_raw_content = \
INSERT \
  INTO series_import_raw_data \
     ( request_id \
     , page_content \
     , created_at \
     , updated_at \
     ) \
VALUES \
     ( :request_id \
     , :content \
     , :created_at \
     , :updated_at \
     )

series_import_requests.find_raw_content_by_request_id = \
SELECT page_content \
  FROM series_import_raw_data \
 WHERE request_id = :request_id

series_import_requests.add_parsed_content = \
INSERT \
  INTO series_import_parsed_data \
     ( request_id \
     , category_id \
     , country_id \
     , image_url \
     , release_year \
     , created_at \
     , updated_at \
     ) \
VALUES \
     ( :request_id \
     , :category_id \
     , :country_id \
     , :image_url \
     , :release_year \
     , :created_at \
     , :updated_at \
     )

series_import_requests.find_parsed_data_by_request_id = \
   SELECT pd.image_url \
        , cat.slug AS category_slug \
        , CASE WHEN 'ru' = :lang THEN COALESCE(cat.name_ru, cat.name) ELSE cat.name END AS category_name \
        , count.slug AS country_slug \
        , CASE WHEN 'ru' = :lang THEN COALESCE(count.name_ru, count.name) ELSE count.name END AS country_name \
        , pd.release_year \
     FROM series_import_parsed_data pd \
LEFT JOIN categories cat \
       ON cat.id = pd.category_id \
LEFT JOIN countries count \
       ON count.id = pd.country_id \
 WHERE pd.request_id = :request_id
